package clases;

import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.swing.JOptionPane;

public class Cliente {
	private String identidad;
	private String Nombre;
	private String Apellido;
	private String Genero;
	private int edad;
	private ArrayList<LineaTelefonica> lineaTelefonica; 
	private int op = 0;
	private Cliente cliente;
	private String errores = "";
	private String patronIdentidad = "[0-9]{4}-[0-9]{4}-[0-9]{5}";
	
	//OTRA FORMA DEL CONSTRUCTOR
	/**
	public Cliente(long identidad, String nombre, String apellido,
			String genero, int edad) {

		this.identidad = identidad;
		Nombre = nombre;
		Apellido = apellido;
		Genero = genero;
		this.edad = edad;
		op = Integer.valueOf(JOptionPane.showInputDialog("Cuantas lineas desea agregar?"));
		lineaTelefonica.add(new LineaTelefonica());
	}
	*/
	
	//NECESARIo PARA INSTANCIAR
	public Cliente(boolean t){	
	}
	
	public Cliente() {
		lineaTelefonica = new ArrayList<LineaTelefonica>();
		String errores= " ";
		do{
			//errores= "";
			cliente = new Cliente(true);
			solicitarDatos(cliente);
			errores+= validarDatos();
			try {
				op = Integer.valueOf(JOptionPane.showInputDialog("Cuantas lineas desea agregar:"));
				
			} catch (NumberFormatException e) {
				errores+="Ingrese un numero valido.\n";
			}
			for(int i= 0; i < op ; i++){
				lineaTelefonica.add(new LineaTelefonica());	}
			if(!errores.isEmpty())
				JOptionPane.showMessageDialog(null, errores);
			
		}while(!errores.isEmpty() && !errores.equals(""));
		
	}
	
	public void solicitarDatos(Cliente cliente){
		errores = "  ";
		Nombre = JOptionPane.showInputDialog("Ingrese el nombre:", this.getNombre());
		Apellido = JOptionPane.showInputDialog("Ingrese el apellido:", this.getApellido());
		Genero = JOptionPane.showInputDialog("Genero:", this.getGenero());
		edad = Integer.valueOf(JOptionPane.showInputDialog("Ingrese la edad:", this.getEdad()));
		identidad = JOptionPane.showInputDialog("Identidad:",this.getIdentidad());
		
	}
	
	public String validarDatos(){
		if(identidad.isEmpty())
			errores+="El campo identidad esta vacio\n";
		if(Nombre.isEmpty())
			errores += "El campo nombre esta vacio\n";
		if(Genero.isEmpty())
			errores+="El campo identidad esta vacio\n";
		if(Apellido.isEmpty())
			errores += "El campo nombre esta vacio\n";
		
		if(!validarPatron(patronIdentidad, identidad))
			errores += "El campo identidad debe tener el formato XXXX-XXXX-XXXXX\n";		
		
		return errores;
	}
	
	public String getIdentidad() {
		return identidad;
	}
	public void setIdentidad(String identidad) {
		this.identidad = identidad;
	}
	public String getNombre() {
		return Nombre;
	}
	public void setNombre(String nombre) {
		Nombre = nombre;
	}
	public String getApellido() {
		return Apellido;
	}
	public void setApellido(String apellido) {
		Apellido = apellido;
	}
	public String getGenero() {
		return Genero;
	}
	public void setGenero(String genero) {
		Genero = genero;
	}
	public int getEdad() {
		return edad;
	}
	public void setEdad(int edad) {
		this.edad = edad;
	}

	public boolean validarPatron(String patron,String texto){
		Pattern pattern = Pattern.compile(patron);
		Matcher matcher = pattern.matcher(texto); 
		return matcher.matches();
			
	}
	@Override
	public String toString() {
		String string = getNombre() + "\t\t"  + getApellido() + "\t\t" + getGenero() + "\t\t"
				+ getEdad() + "\t\t"   + lineaTelefonica.toString();
		
		return  string;
	}
	
}
